language: node_js
node_js:
  - "8"
  - "6"
script:
  - npm run lint
  - npm test
  - npm run examples
services:
  - docker
env:
  global:
    - KUBELESS_VERSION=0.0.20
install:
  # Install kubectl, kubecfg and minikube
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  - chmod +x ./kubectl
  - sudo mv ./kubectl /usr/local/bin/kubectl
  - ./scripts/install-minikube.sh
  - curl -LO https://github.com/ksonnet/kubecfg/releases/download/v0.5.0/kubecfg-linux-amd64
  - chmod +x ./kubecfg-linux-amd64
  - sudo mv ./kubecfg-linux-amd64 /usr/local/bin/kubecfg
  - chmod +x $GOPATH/bin/kubecfg
  - git clone --depth=1 https://github.com/ksonnet/ksonnet-lib.git
  - export KUBECFG_JPATH=$PWD/ksonnet-lib
  # Install kubeless
  - kubectl create ns kubeless
  - curl -sLO https://raw.githubusercontent.com/kubeless/kubeless/$KUBELESS_VERSION/kubeless-rbac-novols.jsonnet
  - kubecfg update update kubeless-rbac-novols.jsonnet
  - curl -sL https://raw.githubusercontent.com/kubeless/kubeless/0.0.20/manifests/ingress/ingress-controller.yaml | kubectl create -f -
  - curl -LO https://github.com/kubeless/kubeless/releases/download/$KUBELESS_VERSION/kubeless_linux-amd64.zip
  - unzip kubeless_linux-amd64.zip
  - sudo mv ./bundles/kubeless_linux-amd64/kubeless /usr/local/bin/kubeless
  - until kubectl get all --all-namespaces | sed -n 's/po\/kafka//p' | grep Running; do kubectl -n kubeless describe pod kafka-0; kubectl -n kubeless describe pvc; kubectl -n kubeless describe pv; sleep 10; done
  - kubectl get all --all-namespaces
  # Install npm dependencies
  - npm install -g serverless
  - npm install
